
//
//  R.swift
//  Project : TabBarV1
//
//  Auto generated by ReflectCode.com 
//
//  R.swift file to hold the details of resources used in the project
//  Used for compatibility with swift code generated from Android code
//
import Foundation
import UIKit
 
    extension UIView {
        func subviewsRecursive() -> [UIView] {
            return subviews + subviews.flatMap { $0.subviewsRecursive() }
        }
    }
 
    /// Struct for all resources used in project
    struct R {
 
        /// Struct for tag assigned to UI resources
        struct id {
            
            // IDs for 'mainView'
            static let main_layout                    = 10001
            static let tab_layout                     = 10002
            static let pager                          = 10003
            
            // IDs for 'fragment_tab1'
            static let RC_ID_20001                    = 20001
            static let textView                       = 20002
            
            // IDs for 'fragment_tab2'
            static let RC_ID_30001                    = 30001
            
            // IDs for 'fragment_tab3'
            static let RC_ID_40001                    = 40001
        }
 
 
        /// Struct for tag assigned to Layout files (xib and storyboard)
        struct layout {
            static let activity_main                  = 0
            static let fragment_tab1                  = 1
            static let fragment_tab2                  = 2
            static let fragment_tab3                  = 3
        }
 
        public static let layoutResources :[String] = ["activity_main", "fragment_tab1", "fragment_tab2", 
                          "fragment_tab3", ]
 
 
        /// Structure for String resources IDs
        struct string {
            static let app_name                       = 100000
        }

        public static let stringResources :[String] = [  "string_app_name" ] 
 
 
        /// Struct for Array resources of various types
        struct array {
        }

        public static let arrayResources :[String] = [ ] 
 
 
        /// Struct for Dimention resources
        struct dimen {
        }

        public static let dimenResources :[String] = [ ] 
 
 
        /// Structure for Boolean resources
        struct bool {
        }

        public static let boolResources :[String] = [ ] 
 
 
        /// Struct for Color values defined in project
        struct color {
            static let colorPrimary                   = 500000
            static let colorPrimaryDark               = 500001
            static let colorAccent                    = 500002
        }

        public static let colorResources :[String] = [  "colorPrimary", "colorPrimaryDark", "colorAccent" ] 
 
 
        /// IDs for Integer type of resources
        struct integer {
        }

        public static let integerResources :[String] = [ ] 
 
 
        /// IDs for all Drawable resources
        struct drawable {
        }

        public static let drawableFileNames :[String] = [ ] 
 
        /// Structure of IDs for all Style resources
        struct style {
            static let AppTheme_pink = 900000
            static let AppTheme_Grey = 900001
            static let AppTheme_Green = 900002
            static let AppTheme_purple = 900003
        }
 
        public static let styleClassNames: [String] = ["AppTheme_pink","AppTheme_Grey","AppTheme_Green","AppTheme_purple"]
 
        /// IDs for font resources
        struct font {
        }

        public static let fontFileNames :[String] = [ ] 
 
    }
 
// --[ End of R.swift ]-- 

